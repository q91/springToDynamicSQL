<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        
        
     <!-- 配置组件扫描器，使用注解方式开发,不用配置dao和service -->
      <!-- 在springmvc.xml文件中也可以配置这个属性 -->  
     <context:component-scan base-package="com.lll"/>
      
    <!-- 数据源 -->
<!--     <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/test" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean> -->
    
    <!-- 配置session工厂 -->
<!--     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean> -->
    
    <!-- 事务管理器 -->
<!--     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> -->
    
    <!-- 配置AOP通知 -->
<!--     <tx:advice id="txAdvice" transaction-manager="transactionManager">
         配置事务属性
         <tx:attributes>
             添加事务管理的方法
             <tx:method name="save*" propagation="REQUIRED"/>
             <tx:method name="delete*" propagation="REQUIRED"/>
             <tx:method name="update*" propagation="REQUIRED"/>
             <tx:method name="select*" read-only="true"/>
         </tx:attributes>
     </tx:advice> -->
     
     <!-- 配置AOP，为添加事务管理的操作配置AOP -->
<!--     <aop:config>
        引入的Spring定义的事务通知，需要使用aop:advisor
        下面难
        <aop:advisor advice-ref="txAdvice"
            pointcut="execution(* com.edu.test.service.*.*(..))"
        />
    </aop:config> -->
</beans>